name: CI/CD pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  push_to_registry:
    runs-on: self-hosted
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 


      - name: Login to DockerHub
        uses: docker/login-action@v1 # Info: https://github.com/docker/build-push-action/tree/releases/v1#tags
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: Dinahalem/Bitot_test
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: dina2022/new-flask
        
  deploy_to_EC2:
    name: Push to EC2 Instance
    
    #runs-on: self-hosted       #in case EC2 server running 
    #env: 
        # SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        # REMOTE_HOST: ${{secrets.SSH_HOST}}
        # REMOTE_USER:  ${{secrets.SSH_USER}}
        # TARGET:  ${{secrets.TARGET_DIR}}
    
    runs-on: self-hosted
    steps: 
    #- uses: actions/checkout@v2 # Checkout the repo's main branch
    - uses: actions/checkout@v2
      with: 
         python-version: '3.7'
    - name: Execute app.py # Execute hello.py script
      run: |
          python3 -m venv flask
          . flask/bin/activate
          pip install flask
          pip install -r requirements.txt
          #python ./test_hello.py 
          #python ./app.py
          

    - name: Run Tests # Run tests to check if the script is working properly 
      run: |
          python ./test_hello.py 
          python ./app.py
           
          
  Run_container:
    name: run container
    runs-on: self-hosted  
    steps:         
    - name: Build container
      run: |
          #pip3 install pyinstaller
          #python -m PyInstaller app.py
          #python ./app.py
          docker stop new_app
          docker rm new_app
          docker run -d -p 5003:5003 --name new_app dina2022/new-flask
    
  deploy_to_kubernetes_cluster:
    name: Deploy to k8ss
    runs-on: self-hosted  
    steps:               
    - name: Deployment on K8s 
      run: |  
          minikube start
          kubectl apply -f botit-deployment.yaml
          kubectl apply -f node-port.yaml

